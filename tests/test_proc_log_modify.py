import unittest
import os
import sys
from os.path import dirname

# 项目根目录
BASE_DIR = dirname(dirname(os.path.abspath(__file__)))
# 添加系统环境变量
sys.path.append(BASE_DIR)
from database.ProcedureLogModify import ProcedureLogModify


class TestProcLogMod(unittest.TestCase):
    def test_reset_job_step_value(self):
      obj = ProcedureLogModify('p_rpt_cif032')
      print(obj.reset_job_step_value())
      #self.assertEqual(obj.add_report_log(proc_cont),except_cont)
      
    def test_add_report_log(self):
      self.maxDiff = None
      proc_cont ="""V_JOB_ID,'开始处理...');
COMMIT;

--重跑----
DELETE FROM RPTUSER.RPT_CIF032_D T WHERE T.DATA_DATE = V_DEAL_DATE;

INSERT INTO RPTUSER.TEMP_RPT_CIF032_D_1(
    CUST_ID
   ,DATA_DATE
   ,DATA_AREA
   ,L_EMP_NAME
   ,L_LAST_KYC_RD
   ,L_A_NEXT_KYC_RD
   ,L_M_NEXT_KYC_RD
   ,L_HRISK_CODE
   ,L_RISK_CLASS
   ,L_THESH_TIER
   ,L_THESH_CR
)
SELECT
      T1.ID
     ,T1.DATA_DATE
     ,T1.DATA_AREA
     ,T1.M_L_EMP_NAME
     ,T1.L_LAST_KYC_RD
     ,T1.L_A_NEXT_KYC_RD
     ,T1.L_M_NEXT_KYC_RD
     ,T1.M_L_HRISK_CODE
     ,T2.DESCRIPTION          -- DONGJIAN 20190827
     ,T1.L_THESH_TIER
     ,T1.L_THESH_CR
FROM RPTUSER.RPT_CUSTOMER_MID    T1
LEFT JOIN ODSUSER.CBS_F_EB_LOOKUP_M T2
   ON T2.ID = 'CUS.AML.RISK.RATE*' || T1.L_AML_RISK_RAT 
  AND T2.DATA_DATE = V_DEAL_DATE
  AND T2.M = '1' AND T2.S = '1'
WHERE T1.DATA_DATE = V_DEAL_DATE
  --AND T1.M_L_EMP_NAME IS NOT NULL
  --AND T1.M_L_HRISK_CODE IS NOT NULL
  AND T1.DATA_AREA='FH00';

INSERT INTO RPTUSER.TEMP_RPT_CIF032_D_2(
    CUST_ID
   ,DATA_DATE
   ,DATA_AREA
   ,L_EMP_NAME
   ,L_LAST_KYC_RD
   ,L_A_NEXT_KYC_RD
   ,L_M_NEXT_KYC_RD
   ,L_HRISK_CODE
   ,L_RISK_CLASS
   ,L_THESH_TIER
   ,L_THESH_CR
)
SELECT
      T1.ID
     ,T1.DATA_DATE
     ,T1.DATA_AREA
     ,T1.M_L_EMP_NAME
     ,T1.L_LAST_KYC_RD
     ,T1.L_A_NEXT_KYC_RD
     ,T1.L_M_NEXT_KYC_RD
     ,T1.M_L_HRISK_CODE
     ,T2.DESCRIPTION          -- DONGJIAN 20190827
     ,T1.L_THESH_TIER
     ,T1.L_THESH_CR
FROM RPTUSER.RPT_CUSTOMER_MID    T1
LEFT JOIN ODSUSER.CBS_F_EB_LOOKUP_M T2
   ON T2.ID = 'CUS.AML.RISK.RATE*' || T1.L_AML_RISK_RAT 
  AND T2.DATA_DATE = V_DEAL_DATE
  AND T2.M = '1' AND T2.S = '1'
WHERE T1.DATA_DATE = V_LASTWORK_DATE
  --AND T1.M_L_EMP_NAME IS NOT NULL
  --AND T1.M_L_HRISK_CODE IS NOT NULL
  AND T1.DATA_AREA='FH00';

INSERT INTO RPTUSER.TEMP_RPT_CIF032_D_3(
    CUST_ID
   ,DATA_DATE
   ,DATA_AREA
   ,L_EMP_NAME
   ,L_LAST_KYC_RD
   ,L_A_NEXT_KYC_RD
   ,L_M_NEXT_KYC_RD
   ,L_HRISK_CODE
   ,L_RISK_CLASS
   ,L_THESH_TIER
   ,L_THESH_CR
)
SELECT
      T1.ID
     ,T1.DATA_DATE
     ,T1.DATA_AREA
     ,T1.M_L_EMP_NAME
     ,T1.L_LAST_KYC_RD
     ,T1.L_A_NEXT_KYC_RD
     ,T1.L_M_NEXT_KYC_RD
     ,T1.M_L_HRISK_CODE
     ,T2.DESCRIPTION          -- DONGJIAN 20190827
     ,T1.L_THESH_TIER
     ,T1.L_THESH_CR
FROM RPTUSER.RPT_CUSTOMER_MID    T1
LEFT JOIN ODSUSER.CBS_F_EB_LOOKUP_M T2
   ON T2.ID = 'CUS.AML.RISK.RATE*' || T1.L_AML_RISK_RAT 
  AND T2.DATA_DATE = V_DEAL_DATE
  AND T2.M = '1' AND T2.S = '1'
WHERE T1.DATA_DATE = V_LASTWORK_DATE
  --AND T1.M_L_EMP_NAME IS NOT NULL
  --AND T1.M_L_HRISK_CODE IS NOT NULL
  AND T1.DATA_AREA='FH00';
COMMIT;

V_END_TIME:=CURRENT_TIMESTAMP ;    --处理结束时间
V_SPEND_TIME:=ROUND(TO_NUMBER(TO_DATE(TO_CHAR(V_END_TIME,'YYYY-MM-DD HH24:MI:SS') ,'YYYY-MM-DD HH24:MI:SS')
 -TO_DATE(TO_CHAR(V_ST_TIME,'YYYY-MM-DD HH24:MI:SS') ,'YYYY-MM-DD HH24:MI:SS')) * 24 * 60 * 60);----执行时间

V_JOB_STEP:=1;
INSERT INTO BAT_REPORT_LOG(DEAL_SERIAL_NO,DEAL_DATE,JOB_STEP,JOB_NAME,SPEND_TIME,REMARK,JOB_ID,JOB_STATE)
VALUES(BAT_SERIAL_NO.NEXTVAL, V_DEAL_DATE,V_JOB_STEP,V_JOB_NAME,V_SPEND_TIME,V_ERR_MSG,      
"""
      except_cont ="""V_JOB_ID,'开始处理...');
COMMIT;

--重跑----
DELETE FROM RPTUSER.RPT_CIF032_D T WHERE T.DATA_DATE = V_DEAL_DATE;

INSERT INTO RPTUSER.TEMP_RPT_CIF032_D_1(
    CUST_ID
   ,DATA_DATE
   ,DATA_AREA
   ,L_EMP_NAME
   ,L_LAST_KYC_RD
   ,L_A_NEXT_KYC_RD
   ,L_M_NEXT_KYC_RD
   ,L_HRISK_CODE
   ,L_RISK_CLASS
   ,L_THESH_TIER
   ,L_THESH_CR
)
SELECT
      T1.ID
     ,T1.DATA_DATE
     ,T1.DATA_AREA
     ,T1.M_L_EMP_NAME
     ,T1.L_LAST_KYC_RD
     ,T1.L_A_NEXT_KYC_RD
     ,T1.L_M_NEXT_KYC_RD
     ,T1.M_L_HRISK_CODE
     ,T2.DESCRIPTION          -- DONGJIAN 20190827
     ,T1.L_THESH_TIER
     ,T1.L_THESH_CR
FROM RPTUSER.RPT_CUSTOMER_MID    T1
LEFT JOIN ODSUSER.CBS_F_EB_LOOKUP_M T2
   ON T2.ID = 'CUS.AML.RISK.RATE*' || T1.L_AML_RISK_RAT 
  AND T2.DATA_DATE = V_DEAL_DATE
  AND T2.M = '1' AND T2.S = '1'
WHERE T1.DATA_DATE = V_DEAL_DATE
  --AND T1.M_L_EMP_NAME IS NOT NULL
  --AND T1.M_L_HRISK_CODE IS NOT NULL
  AND T1.DATA_AREA='FH00';

COMMIT;

V_END_TIME:=CURRENT_TIMESTAMP ;    --处理结束时间
V_SPEND_TIME:=ROUND(TO_NUMBER(TO_DATE(TO_CHAR(V_END_TIME,'YYYY-MM-DD HH24:MI:SS') ,'YYYY-MM-DD HH24:MI:SS')
 -TO_DATE(TO_CHAR(V_ST_TIME,'YYYY-MM-DD HH24:MI:SS') ,'YYYY-MM-DD HH24:MI:SS')) * 24 * 60 * 60);----执行时间

V_JOB_STEP:=1;
INSERT INTO BAT_REPORT_LOG(DEAL_SERIAL_NO,DEAL_DATE,JOB_STEP,JOB_NAME,SPEND_TIME,REMARK,JOB_ID,JOB_STATE)
VALUES(BAT_SERIAL_NO.NEXTVAL, V_DEAL_DATE,V_JOB_STEP,V_JOB_NAME,V_SPEND_TIME,V_ERR_MSG,V_JOB_ID,V_JOB_STEP||'结束...');
COMMIT;

INSERT INTO RPTUSER.TEMP_RPT_CIF032_D_2(
    CUST_ID
   ,DATA_DATE
   ,DATA_AREA
   ,L_EMP_NAME
   ,L_LAST_KYC_RD
   ,L_A_NEXT_KYC_RD
   ,L_M_NEXT_KYC_RD
   ,L_HRISK_CODE
   ,L_RISK_CLASS
   ,L_THESH_TIER
   ,L_THESH_CR
)
SELECT
      T1.ID
     ,T1.DATA_DATE
     ,T1.DATA_AREA
     ,T1.M_L_EMP_NAME
     ,T1.L_LAST_KYC_RD
     ,T1.L_A_NEXT_KYC_RD
     ,T1.L_M_NEXT_KYC_RD
     ,T1.M_L_HRISK_CODE
     ,T2.DESCRIPTION          -- DONGJIAN 20190827
     ,T1.L_THESH_TIER
     ,T1.L_THESH_CR
FROM RPTUSER.RPT_CUSTOMER_MID    T1
LEFT JOIN ODSUSER.CBS_F_EB_LOOKUP_M T2
   ON T2.ID = 'CUS.AML.RISK.RATE*' || T1.L_AML_RISK_RAT 
  AND T2.DATA_DATE = V_DEAL_DATE
  AND T2.M = '1' AND T2.S = '1'
WHERE T1.DATA_DATE = V_LASTWORK_DATE
  --AND T1.M_L_EMP_NAME IS NOT NULL
  --AND T1.M_L_HRISK_CODE IS NOT NULL
  AND T1.DATA_AREA='FH00';

COMMIT;

V_END_TIME:=CURRENT_TIMESTAMP ;    --处理结束时间
V_SPEND_TIME:=ROUND(TO_NUMBER(TO_DATE(TO_CHAR(V_END_TIME,'YYYY-MM-DD HH24:MI:SS') ,'YYYY-MM-DD HH24:MI:SS')
 -TO_DATE(TO_CHAR(V_ST_TIME,'YYYY-MM-DD HH24:MI:SS') ,'YYYY-MM-DD HH24:MI:SS')) * 24 * 60 * 60);----执行时间

V_JOB_STEP:=1;
INSERT INTO BAT_REPORT_LOG(DEAL_SERIAL_NO,DEAL_DATE,JOB_STEP,JOB_NAME,SPEND_TIME,REMARK,JOB_ID,JOB_STATE)
VALUES(BAT_SERIAL_NO.NEXTVAL, V_DEAL_DATE,V_JOB_STEP,V_JOB_NAME,V_SPEND_TIME,V_ERR_MSG,V_JOB_ID,V_JOB_STEP||'结束...');
COMMIT;

INSERT INTO RPTUSER.TEMP_RPT_CIF032_D_3(
    CUST_ID
   ,DATA_DATE
   ,DATA_AREA
   ,L_EMP_NAME
   ,L_LAST_KYC_RD
   ,L_A_NEXT_KYC_RD
   ,L_M_NEXT_KYC_RD
   ,L_HRISK_CODE
   ,L_RISK_CLASS
   ,L_THESH_TIER
   ,L_THESH_CR
)
SELECT
      T1.ID
     ,T1.DATA_DATE
     ,T1.DATA_AREA
     ,T1.M_L_EMP_NAME
     ,T1.L_LAST_KYC_RD
     ,T1.L_A_NEXT_KYC_RD
     ,T1.L_M_NEXT_KYC_RD
     ,T1.M_L_HRISK_CODE
     ,T2.DESCRIPTION          -- DONGJIAN 20190827
     ,T1.L_THESH_TIER
     ,T1.L_THESH_CR
FROM RPTUSER.RPT_CUSTOMER_MID    T1
LEFT JOIN ODSUSER.CBS_F_EB_LOOKUP_M T2
   ON T2.ID = 'CUS.AML.RISK.RATE*' || T1.L_AML_RISK_RAT 
  AND T2.DATA_DATE = V_DEAL_DATE
  AND T2.M = '1' AND T2.S = '1'
WHERE T1.DATA_DATE = V_LASTWORK_DATE
  --AND T1.M_L_EMP_NAME IS NOT NULL
  --AND T1.M_L_HRISK_CODE IS NOT NULL
  AND T1.DATA_AREA='FH00';
COMMIT;

V_END_TIME:=CURRENT_TIMESTAMP ;    --处理结束时间
V_SPEND_TIME:=ROUND(TO_NUMBER(TO_DATE(TO_CHAR(V_END_TIME,'YYYY-MM-DD HH24:MI:SS') ,'YYYY-MM-DD HH24:MI:SS')
 -TO_DATE(TO_CHAR(V_ST_TIME,'YYYY-MM-DD HH24:MI:SS') ,'YYYY-MM-DD HH24:MI:SS')) * 24 * 60 * 60);----执行时间

V_JOB_STEP:=1;
INSERT INTO BAT_REPORT_LOG(DEAL_SERIAL_NO,DEAL_DATE,JOB_STEP,JOB_NAME,SPEND_TIME,REMARK,JOB_ID,JOB_STATE)
VALUES(BAT_SERIAL_NO.NEXTVAL, V_DEAL_DATE,V_JOB_STEP,V_JOB_NAME,V_SPEND_TIME,V_ERR_MSG,      
"""
      obj = ProcedureLogModify('p_rpt_cif032')
      self.assertEqual(obj.add_report_log(proc_cont),except_cont)
  
    def test_set_job_step_value(self):
        proc_cont = """
INSERT INTO BAT_REPORT_LOG(DEAL_SERIAL_NO,DEAL_DATE,JOB_STEP,JOB_NAME,SPEND_TIME,REMARK,JOB_ID,JOB_STATE)
VALUES(BAT_SERIAL_NO.NEXTVAL, V_DEAL_DATE,'1',V_JOB_NAME,V_SPEND_TIME,V_ERR_MSG,V_JOB_ID,'结束处理...');
"""
        except_out = """
V_JOB_STEP:=1;
INSERT INTO BAT_REPORT_LOG(DEAL_SERIAL_NO,DEAL_DATE,JOB_STEP,JOB_NAME,SPEND_TIME,REMARK,JOB_ID,JOB_STATE)
VALUES(BAT_SERIAL_NO.NEXTVAL, V_DEAL_DATE,V_JOB_STEP,V_JOB_NAME,V_SPEND_TIME,V_ERR_MSG,V_JOB_ID,'结束处理...');
"""
        obj = ProcedureLogModify("p_rpt_cif035")
        out = obj.set_job_step_value_and_modify_insert(proc_cont)
        #print(f"out:{out}")
        self.assertEqual(except_out, out)

    def test_modify_procedure_between_report_log(self):
        proc_cont = """V_ERR_MSG       := '100001输入参数[I_RUN_DATE]值为空' ;
      RAISE EX_DEAL ;
    END IF ;

    IF LENGTH(I_RUN_DATE) <> 8 THEN
      V_ERR_MSG       := '100002输入参数[I_RUN_DATE]格式错误(YYYYMMDD),输入格式为:' || I_RUN_DATE ;
      RAISE EX_DEAL ;
    END IF ;

INSERT INTO BAT_REPORT_LOG(DEAL_SERIAL_NO,DEAL_DATE,JOB_STEP,JOB_NAME,SPEND_TIME,REMARK,JOB_ID,JOB_STATE)
VALUES(BAT_SERIAL_NO.NEXTVAL, V_DEAL_DATE,'0',V_JOB_NAME,0,V_ERR_MSG,"""
        except_str = """V_ERR_MSG       := '100001输入参数[I_RUN_DATE]值为空' ;
      RAISE EX_DEAL ;
    END IF ;

    IF LENGTH(I_RUN_DATE) <> 8 THEN
      V_ERR_MSG       := '100002输入参数[I_RUN_DATE]格式错误(YYYYMMDD),输入格式为:' || I_RUN_DATE ;
      RAISE EX_DEAL ;
    END IF ;

V_JOB_STEP:=0;
INSERT INTO BAT_REPORT_LOG(DEAL_SERIAL_NO,DEAL_DATE,JOB_STEP,JOB_NAME,SPEND_TIME,REMARK,JOB_ID,JOB_STATE)
VALUES(BAT_SERIAL_NO.NEXTVAL, V_DEAL_DATE,V_JOB_STEP,V_JOB_NAME,0,V_ERR_MSG,"""
        obj = ProcedureLogModify("p_rpt_cif035")
        out_bool = obj.is_log_exists_and_need_modify(proc_cont)
        # test pass 
        self.assertEqual(True, out_bool)
        
        out1 = obj.set_job_step_value_and_modify_insert(proc_cont)
        #print(f"out:{out1}")
        self.assertEqual(except_str, out1)

        out0 = obj.modify_report_log(proc_cont)
        #print(f"out:{out0}")
        self.assertEqual(except_str, out0)
        
        out = obj.modify_log_register(proc_cont)
        #print(f"out:{out}")
        self.assertEqual(except_str, out)


if __name__ == "__main__":
    unittest.main()